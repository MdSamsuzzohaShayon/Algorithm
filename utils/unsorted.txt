Bogosort
just
randomly
rearranges
the
list
of
values
over
and
over,
so
the
first
thing
it's
going
to
need
is
a
function
to
detect
when
the
list
is
sorted.
We'll
write
an
is_sorted
function
that
takes
a
list
of
values
as
a
parameter.
It
will
return
True
if
the
list
passed
in
is
sorted,
or
False
if
it
isn't.
def
is_sorted(values):



We'll
loop
through
the
numeric
index
of
each
value
in
the
list,



from
0
to
one
less
than
the
length
of
the
list.
Like
many



languages,
Python
list
indexes
begin
at
0,
so
a
list
with
a



length
of
5
has
indexes
going
from
0
through
4.


for
index
in
range(len(values)
-
1):





If
the
list
is
sorted,
then
every
value
in
it
will
be
less
than





the
one
that
comes
after
it.
So
we
test
to
see
whether
the





current
item
is
GREATER
than
the
one
that
follows
it.




if
values[index]
>
values[index
+
1]:







If
it
is,
it
means
the
whole
list
is
not
sorted,
so
we
return







False.


return
False
If
we
get
down
here,
it
means
the
loop
completed
without
finding
any
unsorted
values.
(Python
uses
whitespace
to
mark
code
blocks,



so
un-indenting
the
code
like
this
marks
the
end
of
the
loop.)


Since
all
the
values
are
sorted,
we
can
return
True.
return
True